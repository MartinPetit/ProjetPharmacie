<?php

namespace App\Controller;

use App\Entity\Prescription;
use App\Form\PrescriptionType;
use App\Repository\PrescriptionRepository;
use Symfony\Component\HttpFoundation\Request;
use Doctrine\Common\Persistence\ObjectManager;
use Symfony\Component\Routing\Annotation\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\IsGranted;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;

class PrescriptionController extends AbstractController
{
    /**
     * @Route("/prescription", name="prescription")
     * @IsGranted("ROLE_USER")
     */
    public function new(Request $request, ObjectManager $manager)
    {
        $users = $this->getUser();

        $username = $users->getEmail();
        

        $prescription = new Prescription();

        $prescription->setUsers($users);
        $form = $this->createForm(PrescriptionType::class, $prescription);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $brochureFile = $prescription->getBrochureFilename();
            $filename = $this->generateUniqueFileName().'.'.$brochureFile->guessExtension();
            
            $brochureFile->move($this->getParameter('upload_directory'), $filename);
            $prescription->setBrochureFilename($filename);

            $manager->persist($prescription);
            $manager->flush();

            $this->addFlash(
                'success', 
                "Votre ordonnance a bien été envoyé"
              );


        return $this->redirectToRoute('homepage');
        }

        return $this->render('prescription/index.html.twig', [
            'form' => $form->createView(),
            'username' =>$username
        ]);
    }

      /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    /**
     * @Route("/account/prescription", name = "account_prescription")
     * @IsGranted("ROLE_USER")
     */

    public function show(PrescriptionRepository $repo) {

        $users = $this->getUser();

        $email = $users->getEmail();
    
        

        $prescriptions = $repo->findByMail($email);
        return $this->render('prescription/prescriptions.html.twig', [
            'prescriptions' => $prescriptions
        ]);

    }

}
